################################################## PHASE 1 --- START ##################################################

1   --  Create a new Firebase Project
2   --  Install firebase CLI
        a   --  Download and install NodeJs
        b   --  Run cmd "npm install -g firebase-tools"
3   --  Login to firebase using cmd "firebase login" (For logout use cmd "firebase logout")
4   --  Activate firebase CLI
5   --  Configure Firebase CLI
6   --  Add Packages and Dependencies in pubspec.yaml
7   --  Enable firebase services in firebase console (Authentication, Firebase(DB), Storage)
8   --  Generate and add keys of SHA1 and SHA256



----- Firebase Console -----
1 -- Login to firebase console with your account
3 -- Create a new project and give it a name
4 -- Choose analytics option based on your need
5 -- Click on flutter icon
6 -- Install the firebase CLI using node
  -- npm install -g firebase-tools

7 -- run cmd "firebase login"
  -- you will be redirected to the google sign in page and select the account with which you want to link your flutter project

8 -- Install and run the firebase CLI
  -- dart pub global activate flutterfire_cli
  -- If you get any message like :-
  -- Warning: Pub installs executables into $HOME/.pub-cache/bin, which is not on your path.
     You can fix that by adding this to your shell's config file (.bashrc, .bash_profile, etc.):
       export PATH="$PATH":"$HOME/.pub-cache/bin
     Activated flutterfire_cli 1.0.0.
  -- Now to resolve this issue add the given into your PATH environment variable

9 -- Open your flutter project, then, at the root of your Flutter project directory, run this command:
  -- flutterfire configure --project=ecommerceapp-c1f6f (if you simply run "flutterfire configure" and then it will populate all the lists to choose your project from it).
  -- After selecting your project, you will be asked to select platforms -- android, web, ios, macos, windows.
  -- Use to space bar to select and deselect any option and hit enter on android
  -- After successful execution of the code you will see a list of platform with their corresponding firebase app id
  -- A firebase_options.dart will be created automatically inside the lib folder
  -- Run "flutter pub add firebase_core" cmd in terminal

10 -- Paste this (Initialize Firebase and add Plugins):
   -- await Firebase.initializeApp(
          options: DefaultFirebaseOptions.currentPlatform,
      );

11 -- Go to firebase console and on left panel Select Build -> Select Authentication
   -- In Sign-in method add a provider
   -- Select Email ID Sign in and enable it
   -- Select Google Sign in and enable it
   -- Add a support email address

12 -- For configuring google sign in --> Project Overview --> Project Settings
   -- In Your Apps you can see your app
   -- Select hausify_v2
   -- Click Add fingerprint
   -- GENERATE SHA-1 & SHA-256
      ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
      Mac --> keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android
      Windows --> keytool -list -v -keystore "\.android\debug.keystore" -alias androiddebugkey -storepass android -keypass android
      Linux --> keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android
   -- Run the above command to Generate SHA1 and SHA 256 in the terminal

13 -- Go to Build -> Firestore Database -> Set in test mode

14 -- Go to Build -> Storage -> Set in test mode

15 -- Rerun firebase configure cmd in terminal

##################################################### PHASE 1 --- END #######################################################